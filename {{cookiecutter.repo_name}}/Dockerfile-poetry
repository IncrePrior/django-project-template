# Dockerfile for Poetry wrapper
# The first build steps of this file are identical to those in the Django Dockerfile to make the build a bit faster.

FROM {{ python_image(cookiecutter.python_version, 'alpine') }}

ENV POETRY_VIRTUALENVS_CREATE 0
ENV PYTHONPYCACHEPREFIX /.pycache

# Let all *.pyc files stay within the container, for Python >= 3.8
RUN mkdir -p $PYTHONPYCACHEPREFIX

# Install bash, libpq, libjpeg-turbo and gettext
# Bash is required to support `wait-for-it.sh` script, should not add too much to docker image
RUN apk add --no-cache bash gettext libpq libjpeg-turbo

# Install build dependencies and mark them as virtual packages so they could be removed together
RUN apk add --no-cache --virtual .build-deps \
    ca-certificates alpine-sdk postgresql-dev python3-dev linux-headers musl-dev \
    libffi-dev libxml2-dev libxslt-dev jpeg-dev zlib-dev bash gettext rust cargo

# Copy Python requirements dir and Install requirements
RUN pip install -U pip setuptools wheel poetry

# -- begin image-specific commands

# This script provides poetry.lock checking
COPY scripts/poetry-check-lock.sh /

VOLUME /src
WORKDIR /src
