# Development Dockerfile for Django app. Keep the first commands in sync with Dockerfile-poetry

FROM {{ cookiecutter.python_version|python_image }}

ENV POETRY_VIRTUALENVS_CREATE 0

# Install bash, libpq, libjpeg-turbo and gettext
# Bash is required to support `wait-for-it.sh` script, should not add too much to docker image
RUN apk add --no-cache bash gettext libpq libjpeg-turbo

# Install build dependencies and mark them as virtual packages so they could be removed together
RUN apk add --no-cache --virtual .build-deps \
    ca-certificates alpine-sdk postgresql-dev python3-dev linux-headers musl-dev \
    libffi-dev libxml2-dev libxslt-dev jpeg-dev zlib-dev bash gettext

# Copy Python requirements dir and Install requirements
RUN pip install -U pip setuptools cryptography==3.3.2 wheel poetry

# -- begin image-specific commands

COPY ./wait-for-it.sh /usr/bin/

COPY pyproject.toml /
COPY poetry.lock /

# Install all dependencies from poetry.lock (dev included by default)
RUN poetry install

# Set the default directory where CMD will execute
WORKDIR /app

# Run Django's runserver by default
CMD python manage.py runserver 0.0.0.0:80
