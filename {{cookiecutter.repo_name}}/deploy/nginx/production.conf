# Per-IP rate limiting for login pages. Allows 5 req/sec per IP (plus bursts of 10 reqs, defined further below).
#  See https://www.nginx.com/blog/rate-limiting-nginx/ for description on how this works.
limit_req_zone $binary_remote_addr zone={{cookiecutter.repo_name}}-login-limit:10m rate=5r/s;


{% if cookiecutter.frontend_style == 'spa' %}# Razzle http redirect{% endif %}
server {
    listen 80;
    server_name {{ cookiecutter.live_hostname }} www.{{ cookiecutter.live_hostname }};

    include conf.d/app.{{cookiecutter.repo_name}}.include;

    location / {
        rewrite ^(.*)$ https://{{ cookiecutter.live_hostname }}$1 permanent;
    }
}

{%- if cookiecutter.frontend_style == 'spa' %}

# Django http redirect
server {
    listen 80;
    server_name {{ cookiecutter.spa_django_host_prefix|as_hostname }}.{{ cookiecutter.live_hostname }} www.{{ cookiecutter.spa_django_host_prefix|as_hostname }}.{{ cookiecutter.live_hostname }};
    include conf.d/app.{{cookiecutter.repo_name}}.include;

    location / {
        rewrite ^(.*)$ https://{{ cookiecutter.live_hostname }}$1 permanent;
    }
}

# Razzle www. redirect{% endif %}
server {
    listen 443 ssl http2;
    server_name www.{{ cookiecutter.live_hostname }};

    include conf.d/app.{{cookiecutter.repo_name}}.include;
    include conf.d/ssl-common.include;
    include conf.d/ssl.{{cookiecutter.repo_name}}.include;

    location / {
        rewrite ^(.*)$ https://{{ cookiecutter.live_hostname }}$1 permanent;
    }
}

{%- if cookiecutter.frontend_style == 'spa' %}

# Django www. redirect
server {
    listen 443 ssl http2;
    server_name www.{{ cookiecutter.spa_django_host_prefix|as_hostname }}.{{ cookiecutter.live_hostname }};

    include conf.d/app.{{cookiecutter.repo_name}}.include;
    include conf.d/ssl-common.include;
    include conf.d/ssl.{{cookiecutter.repo_name}}.include;

    location / {
        rewrite ^(.*)$ https://{{ cookiecutter.spa_django_host_prefix|as_hostname }}.{{ cookiecutter.live_hostname }}$1 permanent;
    }
}

# Razzle app
server {
    listen 443 ssl http2;
    server_name {{ cookiecutter.live_hostname }};

    root /files/{{cookiecutter.repo_name}}/app/assets;

    include conf.d/common.{{cookiecutter.repo_name}}.node.include;
}
{% endif %}

# Django app
server {
    listen 443 ssl http2;
{%- if cookiecutter.frontend_style == 'webapp' %}
    server_name {{cookiecutter.repo_name|as_hostname}}.{{cookiecutter.test_host}};
{%- else %}
    server_name {{ cookiecutter.spa_django_host_prefix|as_hostname }}.{{cookiecutter.repo_name|as_hostname}}.{{cookiecutter.test_host}};
{%- endif %}

    root /files/{{cookiecutter.repo_name}};

    include conf.d/common.{{cookiecutter.repo_name}}.django.include;
}
