# You can also use the fallback image from docker hub: thorgate/django-template-ci:latest
image: registry.gitlab.com/thorgate-public/django-project-template/ci:latest

services:
  - docker:dind

variables:
  POSTGRES_USER: "{{ cookiecutter.repo_name }}"
  POSTGRES_PASSWORD: "{{ cookiecutter.repo_name }}"
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

stages:
  - test
  - build

test-django:
  stage: test
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  cache:
    key: django-cache
    paths:
      - .data/pycache/pip
      - .data/pycache/pypoetry
    policy: pull-push
  artifacts:
    reports:
      cobertura: {{cookiecutter.repo_name}}/coverage.xml
  except:
    refs:
      - template  # Don't run CI on template branch, should not be required
    variables:
      - $CI_COMMIT_MESSAGE =~ /tests skip/
      - $CI_COMMIT_MESSAGE =~ /test skip/
      - $CI_COMMIT_MESSAGE =~ /\[no tests?\]/
  variables:
    EDIT_SETTINGS: "no"
    DPT_VENV_CACHING: "1"
  script:
    - make settings
    - docker-compose build django
    - make run-python cmd='entrypoint.sh -- echo "Installed dependencies"'
    - make lint-py
    - make coverage-py

test-node:
  stage: test
  coverage: '/All\sfiles.*?\s+(\d+.\d+)/'
  cache:
    key: ci-node-cache
    paths:
      - .data/node_modules
      - .data/yarn
    policy: pull-push
  artifacts:
    reports:
      junit: {% if cookiecutter.frontend_style == 'spa' %}app{% else %}webapp{% endif %}/coverage/cobertura-coverage.xml
  except:
    refs:
      - template  # Don't run CI on template branch, should not be required
    variables:
      - $CI_COMMIT_MESSAGE =~ /tests skip/
      - $CI_COMMIT_MESSAGE =~ /test skip/
      - $CI_COMMIT_MESSAGE =~ /\[no tests?\]/
  variables:
    EDIT_SETTINGS: "no"
  script:
    - make settings
    - docker-compose build node
    - make node-install
    - make lint-js
    - make coverage-js


build:
  stage: build
  needs: []
  except:
    - template # Don't run CI on template branch, should not be required
  variables:
    EDIT_SETTINGS: "no"
  script:
    - make settings
    # Ensure production images build also
    - docker-compose -f docker-compose.production.yml build
